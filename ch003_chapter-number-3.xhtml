
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml"><head><link href="objavi.css" type="text/css" rel="stylesheet"/>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({jax: ["input/MathML", "input/TeX", "input/AsciiMath", "output/NativeMML", "output/HTML-CSS"],extensions: ["asciimath2jax.js", "tex2jax.js","mml2jax.js","MathMenu.js","MathZoom.js"],tex2jax: { inlineMath: [["[TEX_START]","[TEX_END]"], ["\(", "\)"]] },MMLorHTML: {prefer:{MSIE:"MML",Firefox:"MML",Opera:"HTML",Chrome:"HTML",Safari:"HTML",other:"HTML"}},TeX: {extensions: ["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"], noErrors: { disabled: true }},AsciiMath: { noErrors: { disabled: true } }});</script></head>
    <body>
    
    
    <!--?xml version="1.0" encoding="UTF-8"?--><link href="objavi.css" type="text/css" rel="stylesheet">
        <script type="text/x-mathjax-config">MathJax.Hub.Config({jax: ["input/MathML", "input/TeX", "input/AsciiMath", "output/NativeMML", "output/HTML-CSS"],extensions: ["asciimath2jax.js", "tex2jax.js","mml2jax.js","MathMenu.js","MathZoom.js"],tex2jax: { inlineMath: [["[TEX_START]","[TEX_END]"], ["\(", "\)"]] },MMLorHTML: {prefer:{MSIE:"MML",Firefox:"MML",Opera:"HTML",Chrome:"HTML",Safari:"HTML",other:"HTML"}},TeX: {extensions: ["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"], noErrors: { disabled: true }},AsciiMath: { noErrors: { disabled: true } }});</script>
    
    
    
    <!--?xml version="1.0" encoding="UTF-8"?--><link href="objavi.css" type="text/css" rel="stylesheet">
        <script type="text/x-mathjax-config">MathJax.Hub.Config({jax: ["input/MathML", "input/TeX", "input/AsciiMath", "output/NativeMML", "output/HTML-CSS"],extensions: ["asciimath2jax.js", "tex2jax.js","mml2jax.js","MathMenu.js","MathZoom.js"],tex2jax: { inlineMath: [["[TEX_START]","[TEX_END]"], ["\(", "\)"]] },MMLorHTML: {prefer:{MSIE:"MML",Firefox:"MML",Opera:"HTML",Chrome:"HTML",Safari:"HTML",other:"HTML"}},TeX: {extensions: ["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"], noErrors: { disabled: true }},AsciiMath: { noErrors: { disabled: true } }});</script>
    <h1>Chapter number 3</h1><p><br></p><p>I certainly have no experience with a Book Sprint, so I can't comment on that. But I can comment on the fact that none of the tools that supposedly support these agile publishing models ever actually work in a way that could produce a professional quality technical book. For example, real books have authors and editors, and both want to see the changes the other makes. Few systems do this at all, and those that do are pretty poor -- far below the hoary Track Changes that Microsoft Word has had for decades. And then there is commenting; a real system would allow commenting at the paragraph level (or even more granular), because that's the level at which ideas happen. Going beyond the writing and editing process, the design of a book is not just a matter of making it look pretty; styled elements in a book (I'm talking about a complex book, not a piece of fiction that's just words) support the mission of the book as a teaching tool, as something that conveys information. But more so than anything else, very few of these agile publishing tools offer significant styling options beyond what appeared in early versions of HTML. Frankly, it's just primitive at the moment, and far, far below the level of modern Web standards.</p><p style="">Don't get me wrong. I'd love to use these technologies; but that's a hard decision when it means producing something that would make any professional publisher cringe.</p>

</body></html>
